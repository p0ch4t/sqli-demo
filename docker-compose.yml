version: '3.8'

services:
  app:
    build: .
    ports:
      - "5000:5000"
    environment:
      # MySQL
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_PORT=${MYSQL_PORT}
      # PostgreSQL
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - POSTGRES_PORT=${POSTGRES_PORT}
      # SQL Server
      - SQLSERVER_HOST=${SQLSERVER_HOST}
      - SQLSERVER_USER=${SQLSERVER_USER}
      - SQLSERVER_PASSWORD=${SQLSERVER_PASSWORD}
      - SQLSERVER_DATABASE=${SQLSERVER_DATABASE}
      - SQLSERVER_PORT=${SQLSERVER_PORT}
      # Oracle
      - ORACLE_USER=${ORACLE_USER}
      - ORACLE_PASSWORD=${ORACLE_PASSWORD}
      - ORACLE_SERVICE=${ORACLE_SERVICE}
      - ORACLE_HOST=${ORACLE_HOST}
      - ORACLE_PORT=${ORACLE_PORT}
    depends_on:
      - mysql
      - postgresql
      - sqlserver
      - oracle
    volumes:
      - .:/app
    networks:
      - sqli-network

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_PORT: ${MYSQL_PORT}
    command:
          --local-infile=1
          --general-log=1
          --general-log-file=/var/lib/mysql/general.log
          --log-bin-trust-function-creators=1
          --sql-mode=""
          --secure-file-priv=""
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql_setup.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - sqli-network

  postgresql:
    image: postgres:13
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ./postgresql_setup.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - sqli-network

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: ${SQLSERVER_PASSWORD}
      MSSQL_PID: Developer
      SQLSERVER_HOST: ${SQLSERVER_HOST}
      SQLSERVER_USER: ${SQLSERVER_USER}
      SQLSERVER_PASSWORD: ${SQLSERVER_PASSWORD}
      SQLSERVER_DATABASE: ${SQLSERVER_DATABASE}
      SQLSERVER_PORT:  ${SQLSERVER_PORT}
    ports:
      - "${SQLSERVER_PORT}:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - sqli-network

  oracle:
    image: gvenzl/oracle-free:23-full
    platform: linux/arm64
    environment:
      ORACLE_USER: ${ORACLE_USER}
      ORACLE_PASSWORD: ${ORACLE_PASSWORD}
      ORACLE_SERVICE: ${ORACLE_SERVICE}
      ORACLE_HOST: ${ORACLE_HOST}
      ORACLE_PORT: ${ORACLE_PORT}
    ports:
      - "${ORACLE_PORT}:1521"
    volumes:
      - ./oracle_setup.sql:/container-entrypoint-initdb.d/init.sql
    networks:
      - sqli-network

volumes:
  mysql_data:
  postgresql_data:
  sqlserver_data:
  oracle_data:

networks:
  sqli-network:
    driver: bridge
